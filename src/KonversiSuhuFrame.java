import java.awt.event.ItemEvent;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class KonversiSuhuFrame extends javax.swing.JFrame {


    /**
     * Creates new form KonversiSuhuFrame
     */
    public KonversiSuhuFrame() {
        initComponents();
        ButtonGroup bg = new ButtonGroup();
        bg.add(rCelcius);
        bg.add(rFahrenheit);
        bg.add(rKelvin);
        bg.add(rReamur);
        rCelcius.setSelected(true); // Set default selection jika diinginkan
        // Tambahkan DocumentListener untuk konversi otomatis
        txtInput.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                lakukanKonversiOtomatis();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                lakukanKonversiOtomatis();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                lakukanKonversiOtomatis();
            }
        });


    }
    
   // Dari Celsius
    private double celsiusKeFahrenheit(double celsius) {
        return celsius * 9/5 + 32;
    }

    private double celsiusKeKelvin(double celsius) {
        return celsius + 273.15;
    }

    private double celsiusKeReamur(double celsius) {
        return celsius * 4/5;
    }

    // Dari Fahrenheit
    private double fahrenheitKeCelsius(double fahrenheit) {
        return (fahrenheit - 32) * 5/9;
    }

    private double fahrenheitKeKelvin(double fahrenheit) {
        return (fahrenheit - 32) * 5/9 + 273.15;
    }

    private double fahrenheitKeReamur(double fahrenheit) {
        return (fahrenheit - 32) * 4/9;
    }

    // Dari Kelvin
    private double kelvinKeCelsius(double kelvin) {
        return kelvin - 273.15;
    }

    private double kelvinKeFahrenheit(double kelvin) {
        return (kelvin - 273.15) * 9/5 + 32;
    }

    private double kelvinKeReamur(double kelvin) {
        return (kelvin - 273.15) * 4/5;
    }

    // Dari Reamur
    private double reamurKeCelsius(double reamur) {
        return reamur * 5/4;
    }

    private double reamurKeFahrenheit(double reamur) {
        return reamur * 9/4 + 32;
    }

    private double reamurKeKelvin(double reamur) {
        return reamur * 5/4 + 273.15;
    }
    
    
    
    private void lakukanKonversiOtomatis() {
    // Mengecek apakah input suhu kosong
    if (!txtInput.getText().trim().isEmpty()) {
        // Jika tidak kosong, lakukan konversi
        ButtonKonversiActionPerformed(null);
    } else {
        // Jika kosong, kosongkan hasil
        txtHasil.setText("");
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        KeSkala = new javax.swing.JComboBox<>();
        ButtonKonversi = new javax.swing.JButton();
        rCelcius = new javax.swing.JRadioButton();
        rFahrenheit = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        txtHasil = new javax.swing.JTextField();
        rKelvin = new javax.swing.JRadioButton();
        rReamur = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setText("Masukkan Suhu :");

        txtInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInputFocusGained(evt);
            }
        });
        txtInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputActionPerformed(evt);
            }
        });
        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputKeyTyped(evt);
            }
        });

        KeSkala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeSkalaActionPerformed(evt);
            }
        });

        ButtonKonversi.setText("Convert");
        ButtonKonversi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonKonversiActionPerformed(evt);
            }
        });

        buttonGroup1.add(rCelcius);
        rCelcius.setText("Celcius ke Skala lain");
        rCelcius.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rCelciusItemStateChanged(evt);
            }
        });
        rCelcius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rCelciusActionPerformed(evt);
            }
        });

        buttonGroup1.add(rFahrenheit);
        rFahrenheit.setText("Fahrenheit ke Skala lain");
        rFahrenheit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rFahrenheitItemStateChanged(evt);
            }
        });
        rFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rFahrenheitActionPerformed(evt);
            }
        });

        jLabel4.setText("Hasil konversi :");

        txtHasil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHasilActionPerformed(evt);
            }
        });

        buttonGroup1.add(rKelvin);
        rKelvin.setText("Kelvin ke Skala lain");
        rKelvin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rKelvinItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rReamur);
        rReamur.setText("Reamur ke Skala lain");
        rReamur.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rReamurItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(30, 30, 30)
                                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(107, 107, 107)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rFahrenheit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(KeSkala, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rReamur)
                                .addComponent(ButtonKonversi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(rKelvin)
                        .addComponent(rCelcius)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KeSkala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rCelcius)
                    .addComponent(rFahrenheit))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rKelvin)
                    .addComponent(rReamur))
                .addGap(41, 41, 41)
                .addComponent(ButtonKonversi)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonKonversiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonKonversiActionPerformed
        if (KeSkala.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Pilih arah konversi terlebih dahulu.");
            return;
        }
        try {
            double inputSuhu = Double.parseDouble(txtInput.getText());
            String pilihanKonversi = (String) KeSkala.getSelectedItem();
            double hasil = 0.0;

            if (rCelcius.isSelected()) {
                switch (pilihanKonversi) {
                    case "Celsius ke Fahrenheit":
                        hasil = celsiusKeFahrenheit(inputSuhu);
                        break;
                    case "Celsius ke Kelvin":
                        hasil = celsiusKeKelvin(inputSuhu);
                        break;
                    case "Celsius ke Reamur":
                        hasil = celsiusKeReamur(inputSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            } else if (rFahrenheit.isSelected()) {
                switch (pilihanKonversi) {
                    case "Fahrenheit ke Celsius":
                        hasil = fahrenheitKeCelsius(inputSuhu);
                        break;
                    case "Fahrenheit ke Kelvin":
                        hasil = fahrenheitKeKelvin(inputSuhu);
                        break;
                    case "Fahrenheit ke Reamur":
                        hasil = fahrenheitKeReamur(inputSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            } else if (rKelvin.isSelected()) {
                switch (pilihanKonversi) {
                    case "Kelvin ke Celsius":
                        hasil = kelvinKeCelsius(inputSuhu);
                        break;
                    case "Kelvin ke Fahrenheit":
                        hasil = kelvinKeFahrenheit(inputSuhu);
                        break;
                    case "Kelvin ke Reamur":
                        hasil = kelvinKeReamur(inputSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            } else if (rReamur.isSelected()) {
                switch (pilihanKonversi) {
                    case "Reamur ke Celsius":
                        hasil = reamurKeCelsius(inputSuhu);
                        break;
                    case "Reamur ke Fahrenheit":
                        hasil = reamurKeFahrenheit(inputSuhu);
                        break;
                    case "Reamur ke Kelvin":
                        hasil = reamurKeKelvin(inputSuhu);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Pilihan konversi tidak valid!");
                        break;
                }
            }

            txtHasil.setText(String.valueOf(hasil));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang benar!");
        }
    }//GEN-LAST:event_ButtonKonversiActionPerformed

    private void rFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rFahrenheitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rFahrenheitActionPerformed

    private void KeSkalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeSkalaActionPerformed
        
    }//GEN-LAST:event_KeSkalaActionPerformed

    private void txtInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInputActionPerformed

    private void rCelciusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rCelciusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rCelciusActionPerformed

    private void txtHasilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHasilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHasilActionPerformed

    private void txtInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyTyped
      char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txtInputKeyTyped

    private void rCelciusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rCelciusItemStateChanged
         if (evt.getStateChange() == ItemEvent.SELECTED) {
            KeSkala.removeAllItems();
            KeSkala.addItem("Celsius ke Fahrenheit");
            KeSkala.addItem("Celsius ke Kelvin");
            KeSkala.addItem("Celsius ke Reamur");
        }
    }//GEN-LAST:event_rCelciusItemStateChanged

    private void rFahrenheitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rFahrenheitItemStateChanged
         if (evt.getStateChange() == ItemEvent.SELECTED) {
            KeSkala.removeAllItems();
            KeSkala.addItem("Fahrenheit ke Celsius");
            KeSkala.addItem("Fahrenheit ke Kelvin");
            KeSkala.addItem("Fahrenheit ke Reamur");
        }
    }//GEN-LAST:event_rFahrenheitItemStateChanged

    private void rKelvinItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rKelvinItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            KeSkala.removeAllItems();
            KeSkala.addItem("Kelvin ke Celsius");
            KeSkala.addItem("Kelvin ke Fahrenheit");
            KeSkala.addItem("Kelvin ke Reamur");
        }
    }//GEN-LAST:event_rKelvinItemStateChanged

    private void rReamurItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rReamurItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            KeSkala.removeAllItems();
            KeSkala.addItem("Reamur ke Celsius");
            KeSkala.addItem("Reamur ke Fahrenheit");
            KeSkala.addItem("Reamur ke Kelvin");
        }
    }//GEN-LAST:event_rReamurItemStateChanged

    private void txtInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInputFocusGained
        txtInput.setText("");
    }//GEN-LAST:event_txtInputFocusGained

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KonversiSuhuFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonKonversi;
    private javax.swing.JComboBox<String> KeSkala;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rCelcius;
    private javax.swing.JRadioButton rFahrenheit;
    private javax.swing.JRadioButton rKelvin;
    private javax.swing.JRadioButton rReamur;
    private javax.swing.JTextField txtHasil;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables

}
